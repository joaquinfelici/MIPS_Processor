; version 3
; programa de prueba con riesgos

; condiciones iniciales
; mem[4] = 12
; r2 = 2

LW R1,#2(R2) ; R1 = mem[$R2+2] = mem[4] = 12
ADDI R3,R2,#1 ; R3 = 3
SUB R4,R3,R2 ; R4 = R3 - R2 = 1 (riesgo)
ADDI R4,R4,#9 ; R4 = 10 (riesgo)
SW R4,#1(R3) ; mem[4] = 10 (riesgo)
LW R5,#1(R3) ; R5 = mem[4] = 10 
ORI R5,R5,#5 ; R5 = 10 | 5 = 15 (riesgo)
SW R5,#2(R3) ; mem[5] = 15 (riesgo)
ADDI R6,R5,#0 ; R6 = R5 = 15
BNE R2,R3,#2 ; if 2 != 3 -> jump 2
ADDI R3,R3,#1 ; not executed
ADDI R3,R3,#1 ; not executed
SW R3,#0(R3) ; mem[3] = 3
BNE R5,R6,#1 ; if 15 != 15 -> jump 1
SW R3,#3(R3) ; mem[6] = 3 (executed)
ADDI R7,R5,#2
LW R8,#2(R2) ; R8 = mem[$R2+2] = mem[4] = 10
HALT

; resultado
; mem[3] = 3
; mem[4] = 10
; mem[5] = 15
; mem[6] = 3
; R1 = 12
; R2 = 2
; R3 = 3
; R4 = 10
; R5 = 15
; R6 = 15
; R7 = 17
; R8 = 10